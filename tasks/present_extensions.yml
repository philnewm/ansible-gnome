---

- name: Ensure system extensions directory exists
  become: true
  ansible.builtin.file:
    path: "{{ extension_path_system }}"
    state: "directory"
    owner: root
    group: root
    mode: "0755"

- name: Get installed GNOME extensions
  ansible.builtin.command:
    cmd: "ls {{ extension_path_system }}"
  register: extensions_list_result
  changed_when: false

- name: Set extensions list
  ansible.builtin.set_fact:
    extensions: "{{ extensions_list_result.stdout_lines }}"

- name: Remove unwanted gnome extensions
  become: true
  loop: "{{ obsolete_gnome_extensions }}"
  ansible.builtin.file:
    path: "{{ extension_path_system }}/{{ item }}"
    state: absent

- name: Install extension-installer dependencies
  become: true
  loop: "{{ extension_installer_dependencies }}"
  when: item not in ansible_facts.packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present

- name: Download extension installer
  become: true
  ansible.builtin.get_url:
    url: https://github.com/brunelli/gnome-shell-extension-installer/raw/master/gnome-shell-extension-installer
    dest: /usr/bin/gnome-shell-extension-installer
    mode: '0755'

- name: Install extensions
  loop: "{{ gnome_extensions }}"
  loop_control:
    label: "{{ extension.name }}"
    loop_var: extension
  when: extension.address not in extensions
  ansible.builtin.include_tasks:
    file: install_extensions.yml

- name: Get installed GNOME extensions
  ansible.builtin.command:
    cmd: "ls {{ extension_path_system }}"
  register: extensions_list_result
  changed_when: false

- name: Set extensions list
  ansible.builtin.set_fact:
    extensions: "{{ extensions_list_result.stdout_lines }}"

- name: Update extension persmissions
  become: true
  loop: "{{ extensions }}"
  ansible.builtin.file:
    path: "{{ extension_path_system }}/{{ item }}/metadata.json"
    mode: "0644"

- name: Enable installed extensions
  community.general.dconf:
    key: "/org/gnome/shell/enabled-extensions"
    value: "{{ extensions | to_json }}"

...
